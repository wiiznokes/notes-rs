
Quelque reflextion sur l'interface


pour la structure de donn√©e de l'explorer:

#[derive(Debug, Clone)]
pub struct DirNode {
    pub path: PathBuf,
    pub is_expanded: bool,
    pub content: Vec<Node>, // filled on expand

    pub name: String,
    pub name_cached: String,
    pub is_name_is_edited: bool,
}



#[derive(Debug, Clone)]
pub struct FileNode {
    pub path: PathBuf,

    pub name: String,
    pub name_cached: String,
    pub is_name_is_edited: bool,
}

#[derive(Debug, Clone)]
pub enum Node {
    Dir(DirNode),
    File(FileNode),
}


Pour l'api:




impl From<PathBuf> for Node {

    /// Converts a [`PathBuf`] into a [`Node`]
    #[inline]
    fn from_dir_path(p: PathBuf) -> PathBuf {

    }
}

fn expand_dir() {

    // 
}

fn unexpand_dir()


On pourrait recherche un node avec son path, dans le vec, 
avec ses caracteristiques

mais si on veut supprimer un elements, que ce passe t'il ?


